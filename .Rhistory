shiny::runApp()
normalizePath
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
NAWIDCC()
tempReport
paste0("NAWI_", input$balanceID, "_", input$serial, "_CalibrationCertificate", ".html")
NAWIDCC()$BalanceID
NAWIDCC()
x <- NAWIDCC()
x$balanceID
NAWIDCC()$balanceID
x$serial
paste0("NAWI_", NAWIDCC()$balanceID, "_", NAWIDCC()$serial, "_CalibrationCertificate", ".html")
(tempdir()
)
tempdir()
tempdir()
0
Q
runApp('~/Dropbox/2_masscor_shinyapp')
paste0("NAWI_", NAWIDCC()$balanceID, "_", NAWIDCC()$serial, "_CalibrationCertificate", ".html")
file.path(tempdir(), "Human_Readable_CC.Rmd")
tempReport <- file.path(tempdir(), "Human_Readable_CC.Rmd")
tempReport
file.copy("../Human_Readable_CC.Rmd", tempReport, overwrite = TRUE)
file.copy
file.copy("../Human_Readable_CC.Rmd", tempReport, overwrite = TRUE)
file.copy("Human_Readable_CC.Rmd", tempReport, overwrite = TRUE)
file.copy("./Modules/Human_Readable_CC.Rmd", tempReport, overwrite = TRUE)
file.copy("./Modules/Human_Readable_CC.Rmd", tempReport, overwrite = FALSE)
file.copy("./Modules/Human_Readable_CC.Rmd", tempReport, overwrite = TRUE)
list(NAWIDCC = NAWIDCC())
list(NAWIDCC = NAWIDCC()$NAWIDCC)
list(NAWIDCC = NAWIDCC())
rmarkdown::render(tempReport, output_file = file,
params = params,
envir = new.env(parent = globalenv())
)
---
title: "Human Readable Calibration Certificate"
author:
- name: Calibrating Laboratory
date: '`r format(Sys.Date(), "%B %d, %Y")`'
output: html_document
params:
NAWIDCC: NULL
---
NAWIDCC <- readRDS(file = "../ExampleFiles/DCC_NAWI_Balanza Mettler Toledo XPE 205_B743848411 _ AF-07090_2020-07-16.rds")
rm(list = ls())   # Delete all objects in workspace
gc()
rm(list = ls())   # Delete all objects in workspace
gc()
rm(list = ls())   # Delete all objects in workspace
gc()            # Garbage collector
rm(list = ls())   # Delete all objects in workspace
gc()            # Garbage collector
NAWIDCC <- readRDS(file = "../ExampleFiles/DCC_NAWI_Balanza Mettler Toledo XPE 205_B743848411 _ AF-07090_2020-07-16.rds")
NAWIDCC
class(NAWIDCC)
print(NAWIDCC)
NAWIDCC = '`r readRDS(file = "../ExampleFiles/DCC_NAWI_Balanza Mettler Toledo XPE 205_B743848411 _ AF-07090_2020-07-16.rds")`'
NAWIDCC
setwd("~/Dropbox/2_masscor_shinyapp/Modules")
format(Sys.Date(), "%B %d, %Y")
readRDS(file = "../ExampleFiles/DCC_NAWI_Balanza Mettler Toledo XPE 205_B743848411 _ AF-07090_2020-07-16.rds")
'`r readRDS(file = "../ExampleFiles/DCC_NAWI_Balanza Mettler Toledo XPE 205_B743848411 _ AF-07090_2020-07-16.rds")`'
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
runApp()
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
paste0("NAWI_", NAWIDCC()$balanceID, "_", NAWIDCC()$serial, "_CalibrationCertificate", ".html")
file.path(tempdir(), "Human_Readable_CC.Rmd")
tempReport <- file.path(tempdir(), "Human_Readable_CC.Rmd")
file.copy("./Modules/Human_Readable_CC.Rmd", tempReport, overwrite = TRUE)
file.copy("Human_Readable_CC.Rmd", tempReport, overwrite = TRUE)
params <- list(n = NAWIDCC())
rmarkdown::render(tempReport, output_file = file,
params = params,
envir = new.env(parent = globalenv())
)
rmarkdown::render(tempReport, output_file = file,
params = params)
params <- list(n = 50)
rmarkdown::render(tempReport, output_file = file,
params = params,
envir = new.env(parent = globalenv())
)
tempReport
file
# https://stackoverflow.com/questions/35800883/using-image-in-r-markdown-report-downloaded-from-shiny-app
output$DwnlPDFFile1 <- downloadHandler(
filename =  function() {paste0("NAWI_", NAWIDCC()$balanceID, "_", NAWIDCC()$serial, "_CalibrationCertificate", ".html")},
content = function(file) {
tempReport <- file.path(tempdir(), "Human_Readable_CC.Rmd")
file.copy("Human_Readable_CC.Rmd", tempReport, overwrite = TRUE)
params <- list(n = 50)
rmarkdown::render(tempReport, output_file = file,
params = params,
envir = new.env(parent = globalenv())
)
},
# filename = function() {paste0("AnalogCC_NAWI_", input$balanceID, "_", input$serial, "_", input$date, ".pdf")},
# content = function(file) {
#   src <- normalizePath('Human_Readable_CC')
#   src2 <- normalizePath('smiley.png')
#   owd <- setwd(tempdir())
#   on.exit(setwd(owd))
#   file.copy(src, 'Human_Readable_CC')
#   file.copy(src2, 'smiley.png') #NEW
#   library(rmarkdown)
#   out <- render('Human_Readable_CC', pdf_document())
#   file.rename(out, file)
# },
contentType = NULL)
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
library('knitr')
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
tempReport
file.copy("Human_Readable_CC.Rmd", tempReport, overwrite = TRUE)
params
rmarkdown::render(tempReport, output_file = paste0(tempdir(), '/Markdown.html'), output_format = 'html_document',
params = params,
envir = globalenv())
runApp('~/Dropbox/2_masscor_shinyapp')
rmarkdown::render(tempReport, output_file = paste0(tempdir(), '/Markdown.html'), output_format = 'html_document',
params = params,
envir = globalenv())
runApp('~/Dropbox/2_masscor_shinyapp')
tempdir()
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
runApp('~/Dropbox/2_masscor_shinyapp')
getPage()
Q
runApp('~/Dropbox/2_masscor_shinyapp')
runApp()
gc()            # Garbage collector
file.copy("Human_Readable_CC.Rmd", tempReport, overwrite = TRUE)
tempReport <- file.path(tempdir(), "Human_Readable_CC.Rmd")
file.copy("Human_Readable_CC.Rmd", tempReport, overwrite = TRUE)
setwd("~/Dropbox/2_masscor_shinyapp/Modules")
file.copy("Human_Readable_CC.Rmd", tempReport, overwrite = TRUE)
setwd("~/Dropbox/2_masscor_shinyapp")
gc()            # Garbage collector
gc()            # Garbage collector
file.copy("Human_Readable_CC.Rmd", tempReport, overwrite = TRUE)
params <- list(n = 50)
rmarkdown::render(tempReport, output_file = file,
params = params,
envir = new.env(parent = globalenv()))
rmarkdown::render(tempReport, output_file = 'file.html',
params = params,
envir = new.env(parent = globalenv()))
rmarkdown::render(tempReport, output_file = 'file.html',
params = params,
envir = new.env(parent = globalenv()), quiet = TRUE)
getwd()
runApp()
runApp()
shiny::runApp()
runApp()
library(markdown)
runApp()
render
runApp()
runApp()
runApp()
runApp()
runApp()
tempReport <- file.path(tempdir(), "Human_Readable_CC.Rmd")
tempReport
file.copy("Human_Readable_CC.Rmd", tempReport, overwrite = TRUE)
params <- list(n = 50)
HTML(rmarkdown::render(tempReport, params = params, quiet = TRUE))
rmarkdown::render(tempReport, params = params, quiet = TRUE)
rmarkdown::render(tempReport
)
runApp()
rmarkdown::render(tempReport, params = params, quiet = TRUE, envir = globalenv())
tempReport <- file.path(tempdir(), "Human_Readable_CC.Rmd")
tempReport
file.copy("Human_Readable_CC.Rmd", tempReport, overwrite = TRUE)
tempReport
rmarkdown::render(tempReport, output_file = 'Human_Readable_CC.html', params = params, quiet = TRUE, envir = globalenv())
tempReport <- file.path(tempdir(), "Human_Readable_CC.Rmd")
file.copy("Human_Readable_CC.Rmd", tempReport, overwrite = TRUE)
file.copy("Human_Readable_CC.Rmd", tempReport, overwrite = TRUE)
params <- list(n = 50)
rmarkdown::render(tempReport, output_file = 'Human_Readable_CC.html', params = params, quiet = TRUE, envir = globalenv())
tempdir()
file.path(tempdir(), "Human_Readable_CC.Rmd")
file.path(tempdir(), "Human_Readable_CC.html")
runApp()
tempReport <- file.path('www/masscor NAWI DCC/', "Human_Readable_CC.html")
tempReport <- file.path('www/masscor NAWI DCC/', "Human_Readable_CC.html")
tempReport
file.copy("Human_Readable_CC.Rmd", tempReport, overwrite = TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
is.error(print(NAWIDCC()))
output$primitive <- renderPrint(ifelse(is.error(print(NAWIDCC())), 'Create a masscor NAWI DCC or upload a file', print(NAWIDCC(), complete = TRUE)))
output$primitive
runApp()
runApp()
runApp()
shiny::runApp()
is.error(print(NAWIDCC()))
print(NAWIDCC(), complete = TRUE)
renderPrint(ifelse(is.error(print(NAWIDCC())), 'Create a masscor NAWI DCC or upload a file', print(NAWIDCC(), complete = TRUE)))
logo()
input$InstitutLogo$datapath
logo()
class(logo())
file.path('www/Uploaded masscor NAWI DCC/', "Logo.PNG")
writePNG(image = logo(), target = file.path('www/Uploaded masscor NAWI DCC/', "Logo.PNG"))
writePNG(image = logo(), target = file.path('www/Uploaded masscor NAWI DCC/', "Logo.PNG"))
logoBolean <- reactiveVal(FALSE)
class(logo()) = "array"
class(logo())
class(logo()) == "array"
observe({
if (class(logo()) == "array") {
writePNG(image = logo(), target = file.path('www/Uploaded masscor NAWI DCC/', "Logo.PNG"))
logoBolean(TRUE)
}
})
logoBolean
logoBolean()
logoBolean(TRUE)
logoBolean()
file.exists(file.path('www/Uploaded masscor NAWI DCC/', "Logo.PNG"))
file.exists(file.path('www/Uploaded masscor NAWI DCC/', "Logo.PN.G"))
logoBolean(file.exists(file.path('www/Uploaded masscor NAWI DCC/', "Logo.PNG")))
2
file.path('www/Uploaded masscor NAWI DCC/', "Logo.PNG")
file.path('www/Uploaded masscor NAWI DCC/', "Human_Readable_CC.Rmd")
runApp()
runApp()
class(logo())
logo()
runApp()
logoBolean
file.path(R.home("doc"), "html", "logo.jpg")
file.path('www/Uploaded masscor NAWI DCC/', "Logo.PNG")
file.path('./www/Uploaded masscor NAWI DCC/', "Logo.PNG")
knitr::opts_chunk$set(echo = TRUE)
file.path(R.home("doc"), "html", "logo.jpg")
file.path('www/Uploaded masscor NAWI DCC/', "Logo.PNG")
runApp()
runApp()
params$logoBolean
logoBolean
logoBolean()
params <- list(NAWIDCC = NAWIDCC(), logoBolean = logoBolean())
params
params$logoBolean
if (na)
print('asdafg')
if (NA) print(3)
class(FALSE)
class(NA)
NAWIDCC()$add.info
NAWIDCC()$add.info$Logo
class(NAWIDCC()$add.info$Logo)
writePNG(image = NAWIDCC()$add.info$Logo, target = file.path('www/Uploaded masscor NAWI DCC/', "Logo.PNG"))
params$logoBolean
runApp()
logoBolean
runApp()
R.home()
getwd()
runApp()
runApp()
runApp()
runApp()
html_document
runApp()
runApp()
knitr::html_output
runApp()
nawi <- readRDS("~/Dropbox/2_masscor_shinyapp/ExampleFiles/DCC_NAWI_Balanza Mettler Toledo XPE 205_B743848411 _ AF-07090_2020-07-16.rds")
nawi$institution
nawi$date
strsplit(x = nawi$institution, split = ',')
strsplit(x = nawi$institution, split = ',')[[1]]
strsplit(x = 'asdfasdf, asdfasdf', split = ',')[[1]]
strsplit(x = 'asdfasdf asdfasdf', split = ',')[[1]]
strsplit(x = 'asdfasdf asdfasdf', split = ',')[[1]][2]
runApp()
runApp()
nawi$balanceID
nawi
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(htmltools)
runApp()
file.path('www/Uploaded masscor NAWI DCC/', "Human_Readable_CC.html")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
file.path('Uploaded masscor NAWI DCC/', "Human_Readable_CC.html")
file.path('./ExampleFiles/AnalogCC XPE 205 2020-07-14 4637.pdf')
file.path('./ExampleFiles/AnalogCC XPE 205 2020-07-14 4637.pdsf')
file.path('./ExampleFiles/AnalogCC XPE 205 2020-07-14 4637.pdf')
runApp()
runApp()
params$NAWI <- readRDS('DCC_NAWI_Balanza Mettler Toledo XPE 205_B743848411 _ AF-07090_2020-07-16.rds')
params$NAWI <- readRDS('DCC_NAWI_Balanza Mettler Toledo XPE 205_B743848411 _ AF-07090_2020-07-16.rds')
params$NAWI <- readRDS('DCC_NAWI_Balanza Mettler Toledo XPE 205_B743848411 _ AF-07090_2020-07-16.rds')
params$NAWI
setwd("~/Dropbox/2_masscor_shinyapp")
knitr::opts_chunk$set(echo = TRUE)
library(masscor)
NAWI <- readRDS('DCC_NAWI_Balanza Mettler Toledo XPE 205_B743848411 _ AF-07090_2020-07-16.rds')
params$logoBolean
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
subfldr <- reactive(NAWIDCC()$add.info$CertificateNumber)
subfldr
subfldr()
observe(dir.create(subfldr()))
runApp()
runApp()
dir.create(path = paste0('www/Uploaded masscor NAWI DCC/', '5555'))
dir.create(path = paste0('www/Uploaded masscor NAWI DCC/', '5555'))
nawi$institution
runApp()
runApp()
dir.exists(paste0('www/Uploaded masscor NAWI DCC/', FolderInstitution()))
!dir.exists(paste0('www/Uploaded masscor NAWI DCC/', FolderInstitution()))
if(!dir.exists(paste0('www/Uploaded masscor NAWI DCC/', FolderInstitution()))) {
dir.create(path = paste0('www/Uploaded masscor NAWI DCC/', FolderInstitution()))
}
FolderInstitution()
!dir.exists(paste0('www/Uploaded masscor NAWI DCC/', FolderInstitution()))
dir.create(path = paste0('www/Uploaded masscor NAWI DCC/', FolderInstitution()))
paste0('www/Uploaded masscor NAWI DCC/', FolderInstitution(), '/', subfldr())
LclDirectory <- paste0('www/Uploaded masscor NAWI DCC/', FolderInstitution(), '/', subfldr())
LclDirectory
LclDirectory <- paste0('www/Uploaded masscor NAWI DCC/', FolderInstitution(), '/', subfldr())
dir.create(path = LclDirectory)
runApp()
runApp()
runApp()
LclDirectory()
file.path(LclDirectory(), "Logo.png")
file.path(FolderInstitution(), subfldr(), "Human_Readable_CC.pdf")
runApp()
FolderInstitution()
file.path(FolderInstitution(), '/', subfldr(), 'Human_Readable_CC.pdf')
file.path(FolderInstitution(), subfldr(), "Human_Readable_CC.pdf")
runApp()
runApp()
runApp()
runApp()
setwd("~/Dropbox/2_masscor_shinyapp/www/Uploaded masscor NAWI DCC/INSTITUTO NACIONAL DE METROLOGIA - COLOMBIA/4637")
readRDS('NAWIDCC.rds')
knitr::opts_chunk$set(echo = TRUE)
NAWIDCC
runApp('~/Dropbox/2_masscor_shinyapp')
