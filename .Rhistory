shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
rm(list=ls())
library(shiny)
library(car)
library(shinydashboard)
library(dashboardthemes) #https://cran.r-project.org/web/packages/dashboardthemes/vignettes/using_dashboardthemes.html
library(shinyWidgets)
library(ggplot2) #Grammar of graphics
library(ggfortify)
library(rhandsontable)
library(data.table)
library(stringr)
library(masscor)
library(propagate)
library(dplyr)
library(png)
runApp()
modules <- with(list(pt = 'Modules/'), paste0(pt, list.files(path = pt)))
modules
sapply(c(modules), source)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shinythemes)
install.packages("shinythemes")
library(shinythemes)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('shinyFiles')
library('shinyFiles')
shinyFilesExample()
runApp('~/Dropbox/2_masscor_shinyapp')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
spcs <- function(n) {return(paste0('&nbsp;', n))}
spcs(5)
spcs <- function(n) {return(rep('&nbsp;', n))}
spcs(5)
spcs <- function(n) {return(paste0(rep('&nbsp;', n)))}
spcs(5)
spcs <- function(n) {return(paste0(rep('&nbsp;', n), collapse = TRUE))}
spcs(5)
rep('&nbsp;', n)
n <- 5
rep('&nbsp;', n)
paste0(rep('&nbsp;', n))
paste0(rep('&nbsp;', n), collapse = '')
spcs <- function(n) {return(paste0(rep('&nbsp;', n), collapse = ''))}
spcs(5)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Dropbox/2_titulaR_shinyapp')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
headTags1 <- tags$li(
tags$script(HTML("$('body').addClass('fixed');")),
tags$head(
tags$style(type = "text/css", "body {padding-top: 60px; padding-bottom: 60px; background-color: #efefef;}"),
# Links
tags$style(HTML('
a {
color: #337ab7;
/*color: #2c3e50;      CSS comments  */
text-decoration: none;
}
a:hover, a:focus {
color: #000000;
text-decoration: underline;
}')),
.tab-content>.active {
display: block;
background-color: #ffffff;
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
spcs(1)
html(spcs(1))
HTML(spcs(1))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
need(input$institution)
runApp()
runApp()
runApp()
runApp()
runApp()
input$institution
need(input$institution)
5
need(input$institution)
need(input$institution)
input$institution
is.null(input$institution)
length(input$institution)
is.null(asdf)
exist(dfgs)
exists(dfgs)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
numericInput(ns('d'), label = ReqField('Balance scale division:'), min = 0, value = NULL)
numericInput(ns('d'), label = ReqField('Balance scale division:'), min = 0, value = NULL)
numericInput('d', label = ReqField('Balance scale division:'), min = 0, value = NULL)
numericInput('d', label = ReqField('Balance scale division:'), min = 0)
unitsOpt <- c(Mg = 1e6, kg = 1e3, g = 1e1, mg =	1e-3, ug = 1e-6)
names(unitsOpt)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
unitsOpt
names(unitsOpt)
spcs(5)
paste0(names(unitsOpt), spcs(5))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
gc()
DF.indicationError <- data.frame(units = rep(NA, 3), massSTD = rep(NA, 3), indError = rep(NA, 3), uncert = rep(NA, 2))
DF.indicationError <- data.frame(units = rep(NA, 3), massSTD = rep(NA, 3), indError = rep(NA, 3), uncert = rep(NA, 3))
DF.indicationError
t(DF.indicationError)
rownames( = rep(NA, 2),)
t(DF.indicationError)
rownames(DF.indicationError)
data.frame(units = rep(NA, 3), rep(NA, 3), rep(NA, 3), rep(NA, 3), row.names = c('Nominal mass', 'Indication error', 'Uncertainty'))
# Table indicationerror
DF.indicationError <- data.frame(units = rep(NA, 3), '' = rep(NA, 3), rep(NA, 3), rep(NA, 3), row.names = c('Nominal mass', 'Indication error', 'Uncertainty'))
# Table indicationerror
DF.indicationError <- data.frame(units = rep(NA, 3), '.' = rep(NA, 3), rep(NA, 3), rep(NA, 3), row.names = c('Nominal mass', 'Indication error', 'Uncertainty'))
# Table indicationerror
DF.indicationError <- data.frame(units = rep(NA, 3), '.' = rep(NA, 3), '.' = rep(NA, 3), '.' = rep(NA, 3), row.names = c('Nominal mass', 'Indication error', 'Uncertainty'))
DF.indicationError
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
runApp()
DF.indicationError
cbind(DF.indicationError, DF.indicationError)
cbind(units = rep(NA, 3), matrix(nrow = 3, ncol = 8))
data.frame(cbind(units = rep(NA, 3), matrix(nrow = 3, ncol = 8)), row.names = c('Nominal mass', 'Indication error', 'Uncertainty'))
runApp()
runApp()
runApp()
HTML(paste0(x, spcs(3)))
HTML(paste0('x', spcs(3)))
HTML('x', spcs(3))
runApp()
runApp()
