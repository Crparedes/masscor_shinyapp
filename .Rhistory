h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%'))
DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = data.frame(massSTD, indError, uncert),
indError.units = c('g', 'mg', 'mg'),
rep = data.frame(load = c(0.1, 100, 220),
sd = c(0.00, 0.04, 0.03)),
rep.units = c('g', 'mg'),
eccen = c(100, 0.1), eccen.units = c('g', 'mg'),
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%'))
print(DCC, complete = TRUE)
data.frame(massSTD, indError, uncert)
t(HOT2R(input$HT.indicationError)[, -1])
DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = c('g', 'mg', 'mg'),
rep = data.frame(load = c(0.1, 100, 220),
sd = c(0.00, 0.04, 0.03)),
rep.units = c('g', 'mg'),
eccen = c(100, 0.1), eccen.units = c('g', 'mg'),
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%'))
print(DCC, complete = TRUE)
t(HOT2R(input$HT.indicationError)[, -1])
class(t(HOT2R(input$HT.indicationError)[, -1]))
summary(t(HOT2R(input$HT.indicationError)[, -1]))
DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
#indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError = data.frame(massSTD, indError, uncert),
indError.units = c('g', 'mg', 'mg'),
rep = data.frame(load = c(0.1, 100, 220),
sd = c(0.00, 0.04, 0.03)),
rep.units = c('g', 'mg'),
eccen = c(100, 0.1), eccen.units = c('g', 'mg'),
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%'))
print(DCC, complete = TRUE)
t(HOT2R(input$HT.indicationError)[, -1])
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
#indError = data.frame(massSTD, indError, uncert),
indError.units = c('g', 'mg', 'mg'),
rep = data.frame(load = c(0.1, 100, 220),
sd = c(0.00, 0.04, 0.03)),
rep.units = c('g', 'mg'),
eccen = c(100, 0.1), eccen.units = c('g', 'mg'),
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%')))
t(HOT2R(input$HT.indicationError)[, -1])
data.frame(massSTD, indError, uncert)
summary(data.frame(massSTD, indError, uncert))
summary(t(HOT2R(input$HT.indicationError)[, -1]))
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
#indError = data.frame(massSTD, indError, uncert),
indError.units = c('g', 'mg', 'mg'),
rep = data.frame(load = c(0.1, 100, 220),
sd = c(0.00, 0.04, 0.03)),
rep.units = c('g', 'mg'),
eccen = c(100, 0.1), eccen.units = c('g', 'mg'),
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%')))
DCC$indError
data.frame(t(HOT2R(input$HT.indicationError)[, -1]))
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
#indError = data.frame(t(HOT2R(input$HT.indicationError)[, -1])),
indError = data.frame(massSTD, indError, uncert),
indError.units = c('g', 'mg', 'mg'),
rep = data.frame(load = c(0.1, 100, 220),
sd = c(0.00, 0.04, 0.03)),
rep.units = c('g', 'mg'),
eccen = c(100, 0.1), eccen.units = c('g', 'mg'),
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%')))
DCC$indError
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
#indError = data.frame(massSTD, indError, uncert),
indError.units = c('g', 'mg', 'mg'),
rep = data.frame(load = c(0.1, 100, 220),
sd = c(0.00, 0.04, 0.03)),
rep.units = c('g', 'mg'),
eccen = c(100, 0.1), eccen.units = c('g', 'mg'),
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%')))
data.frame(massSTD, indError, uncert)$massSTD
class(data.frame(massSTD, indError, uncert)$massSTD)
class(data.frame(massSTD, indError, uncert)[1, ])
class(data.frame(massSTD, indError, uncert)[, 1])
class(t(HOT2R(input$HT.indicationError)[, -1])[, 1])
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1]
#indError.units = c('g', 'mg', 'mg'),
rep = data.frame(load = c(0.1, 100, 220),
sd = c(0.00, 0.04, 0.03)),
rep.units = c('g', 'mg'),
eccen = c(100, 0.1), eccen.units = c('g', 'mg'),
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%')))
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1]
#indError.units = c('g', 'mg', 'mg'),
rep = data.frame(load = c(0.1, 100, 220),
sd = c(0.00, 0.04, 0.03)),
rep.units = c('g', 'mg'),
eccen = c(100, 0.1), eccen.units = c('g', 'mg'),
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%')))
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1],
#indError.units = c('g', 'mg', 'mg'),
rep = data.frame(load = c(0.1, 100, 220),
sd = c(0.00, 0.04, 0.03)),
rep.units = c('g', 'mg'),
eccen = c(100, 0.1), eccen.units = c('g', 'mg'),
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%')))
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1],
expanded = TRUE, k = input$IndErrorK, traceability = input$traceability, classSTD = input$classSTD,
rep = data.frame(load = c(0.1, 100, 220),
sd = c(0.00, 0.04, 0.03)),
rep.units = c('g', 'mg'),
eccen = c(100, 0.1), eccen.units = c('g', 'mg'),
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%')))
SummarizeRepInput(HOT2R(input$HT.repeatability))
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1],
expanded = TRUE, k = input$IndErrorK, traceability = input$traceability, classSTD = input$classSTD,
SummarizeRepInput(HOT2R(input$HT.repeatability))
#rep = data.frame(load = c(0.1, 100, 220), sd = c(0.00, 0.04, 0.03)),
rep.units = c('g', 'mg'),
eccen = c(100, 0.1), eccen.units = c('g', 'mg'),
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%')))
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1],
expanded = TRUE, k = input$IndErrorK, traceability = input$traceability, classSTD = input$classSTD,
SummarizeRepInput(HOT2R(input$HT.repeatability)),
#rep = data.frame(load = c(0.1, 100, 220), sd = c(0.00, 0.04, 0.03)),
rep.units = c('g', 'mg'),
eccen = c(100, 0.1), eccen.units = c('g', 'mg'),
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%')))
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1],
expanded = TRUE, k = input$IndErrorK, traceability = input$traceability, classSTD = input$classSTD,
SummarizeRepInput(HOT2R(input$HT.repeatability)),rep.units = input$rep.units,
eccen = c(100, 0.1), eccen.units = c('g', 'mg'),
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%')))
input$rep.units
runApp()
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1],
expanded = TRUE, k = input$IndErrorK, traceability = input$traceability, classSTD = input$classSTD,
SummarizeRepInput(HOT2R(input$HT.repeatability)),#rep.units = input$rep.units,
#rep = data.frame(load = c(0.1, 100, 220), sd = c(0.00, 0.04, 0.03)),
rep.units = c('g', 'mg'),
eccen = c(100, 0.1), eccen.units = c('g', 'mg'),
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%')))
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1],
expanded = TRUE, k = input$IndErrorK, traceability = input$traceability, classSTD = input$classSTD,
SummarizeRepInput(HOT2R(input$HT.repeatability)), rep.units = rep(input$rep.units, 2),
#rep = data.frame(load = c(0.1, 100, 220), sd = c(0.00, 0.04, 0.03)),
rep.units = c('g', 'mg'),
eccen = c(100, 0.1), eccen.units = c('g', 'mg'),
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%')))
rep(input$rep.units, 2)
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1],
expanded = TRUE, k = input$IndErrorK, traceability = input$traceability, classSTD = input$classSTD,
SummarizeRepInput(HOT2R(input$HT.repeatability)), rep.units = rep(input$rep.units, 2),
#rep = data.frame(load = c(0.1, 100, 220), sd = c(0.00, 0.04, 0.03)),
#                 rep.units = c('g', 'mg'),
eccen = c(100, 0.1), eccen.units = c('g', 'mg'),
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%')))
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1],
expanded = TRUE, k = input$IndErrorK, traceability = input$traceability, classSTD = input$classSTD,
SummarizeRepInput(HOT2R(input$HT.repeatability)), rep.units = rep(input$rep.units, 2),
eccen = SummarizeEccenInput(HOT2R(input$HT.eccen)), eccen.units = rep(input$eccen.units, 2)
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%')))
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1],
expanded = TRUE, k = input$IndErrorK, traceability = input$traceability, classSTD = input$classSTD,
SummarizeRepInput(HOT2R(input$HT.repeatability)), rep.units = rep(input$rep.units, 2),
eccen = SummarizeEccenInput(HOT2R(input$HT.eccen)), eccen.units = rep(input$eccen.units, 2),
Temp = c(17.4, 17.9), ## [deg.C]
p = c(750.4, 751.0), ## [hPa]
h = c(70.5, 71.4), ## [%]
unitsENV = c('deg.C', 'hPa', '%')))
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1],
expanded = TRUE, k = input$IndErrorK, traceability = input$traceability, classSTD = input$classSTD,
SummarizeRepInput(HOT2R(input$HT.repeatability)), rep.units = rep(input$rep.units, 2),
eccen = SummarizeEccenInput(HOT2R(input$HT.eccen)), eccen.units = rep(input$eccen.units, 2),
Temp = input$Temp, p = input$bPres, h = input$rHumi,
unitsENV = c(input$TempUnits, input$bPresUnits, input$rHumiUnits),
add.info = add.info()
)
)
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1],
expanded = TRUE, k = input$IndErrorK, traceability = input$traceability, classSTD = input$classSTD,
SummarizeRepInput(HOT2R(input$HT.repeatability)), rep.units = rep(input$rep.units, 2),
eccen = SummarizeEccenInput(HOT2R(input$HT.eccen)), eccen.units = rep(input$eccen.units, 2),
Temp = input$Temp, p = input$bPres, h = input$rHumi,
unitsENV = c(input$TempUnits, input$bPresUnits, input$rHumiUnits),
add.info = add.info()
))
add.info()
logo()
readPNG(source = input$InstitutLogo$datapath)
logo <- reactive(readPNG(source = input$InstitutLogo$datapath))
logo
logo()
logo <- reactive(readPNG(source = input$InstitutLogo$datapath))
logo()
try(logo())
tryCatch(logo())
try(logo(), error = function(x) return(NA))
x <- try(logo(), error = function(x) return(NA))
x
x <- tryCatch(logo(), error = function(x) return(NA))
x
logo <- reactive(readPNG(source = input$InstitutLogo$datapath))
add.info <- reactive(list(
Logo = tryCatch(logo(), error = function(x) return(NA)),
CompleteRepeatability = HOT2R(input$HT.repeatability),
CompleteEccentricity = HOT2R(input$HT.eccen)
))
add.info
add.info()
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1],
expanded = TRUE, k = input$IndErrorK, traceability = input$traceability, classSTD = input$classSTD,
SummarizeRepInput(HOT2R(input$HT.repeatability)), rep.units = rep(input$rep.units, 2),
eccen = SummarizeEccenInput(HOT2R(input$HT.eccen)), eccen.units = rep(input$eccen.units, 2),
Temp = input$Temp, p = input$bPres, h = input$rHumi,
unitsENV = c(input$TempUnits, input$bPresUnits, input$rHumiUnits),
add.info = add.info()
))
runApp()
runApp()
SummarizeEccenInput(HOT2R(input$HT.eccen))
x <- (HOT2R(input$HT.eccen))
x
SummarizeEccenInput <- function(x) {
return(c(mean(x[[1]]), max(abs(x[[1]][1] - x[[1]][2:5]))))
}
SummarizeEccenInput(HOT2R(input$HT.eccen))
# CalibCert DCC creation
NAWI.DCC.Completed <- reactiveVal(0)
NAWI.DCC.Completed
NAWI.DCC.Completed()
NAWI.DCC.Completed(NAWI.DCC.Completed() + 1)
NAWI.DCC.Completed
runApp()
indError = data.frame(massSTD, indError, uncert),
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = data.frame(massSTD, indError, uncert),
#indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1],
expanded = TRUE, k = input$IndErrorK, traceability = input$traceability, classSTD = input$classSTD,
SummarizeRepInput(HOT2R(input$HT.repeatability)), rep.units = rep(input$rep.units, 2),
eccen = SummarizeEccenInput(HOT2R(input$HT.eccen)), eccen.units = rep(input$eccen.units, 2),
Temp = input$Temp, p = input$bPres, h = input$rHumi,
unitsENV = c(input$TempUnits, input$bPresUnits, input$rHumiUnits),
add.info = add.info()
))
massSTD <- c(0.01, 0.5, 1, 10, 20, 50, 100, 120, 150, 200, 220) ## [g]
indError <- c(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.2, -0.2) ## [mg]
uncert <- c(0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2, 0.3, 0.3, 0.4, 0.5) ## [mg]
d <- 0.1 ## [mg]
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = data.frame(massSTD, indError, uncert),
#indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1],
expanded = TRUE, k = input$IndErrorK, traceability = input$traceability, classSTD = input$classSTD,
SummarizeRepInput(HOT2R(input$HT.repeatability)), rep.units = rep(input$rep.units, 2),
eccen = SummarizeEccenInput(HOT2R(input$HT.eccen)), eccen.units = rep(input$eccen.units, 2),
Temp = input$Temp, p = input$bPres, h = input$rHumi,
unitsENV = c(input$TempUnits, input$bPresUnits, input$rHumiUnits),
add.info = add.info()
))
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
#indError = data.frame(massSTD, indError, uncert),
indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1],
expanded = TRUE, k = input$IndErrorK, traceability = input$traceability, classSTD = input$classSTD,
SummarizeRepInput(HOT2R(input$HT.repeatability)), rep.units = rep(input$rep.units, 2),
eccen = SummarizeEccenInput(HOT2R(input$HT.eccen)), eccen.units = rep(input$eccen.units, 2),
Temp = input$Temp, p = input$bPres, h = input$rHumi,
unitsENV = c(input$TempUnits, input$bPresUnits, input$rHumiUnits),
add.info = add.info()
))
DCC$indError
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
indError = data.frame(massSTD, indError, uncert),
#indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1],
expanded = TRUE, k = input$IndErrorK, traceability = input$traceability, classSTD = input$classSTD,
SummarizeRepInput(HOT2R(input$HT.repeatability)), rep.units = rep(input$rep.units, 2),
eccen = SummarizeEccenInput(HOT2R(input$HT.eccen)), eccen.units = rep(input$eccen.units, 2),
Temp = input$Temp, p = input$bPres, h = input$rHumi,
unitsENV = c(input$TempUnits, input$bPresUnits, input$rHumiUnits),
add.info = add.info()
))
DCC$indError
DCC$indError[, 1]
class(DCC$indError[, 1])
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
#indError = data.frame(massSTD, indError, uncert),
indError = t(HOT2R(input$HT.indicationError)[, -1]),
indError.units = HOT2R(input$HT.indicationError)[, 1],
expanded = TRUE, k = input$IndErrorK, traceability = input$traceability, classSTD = input$classSTD,
SummarizeRepInput(HOT2R(input$HT.repeatability)), rep.units = rep(input$rep.units, 2),
eccen = SummarizeEccenInput(HOT2R(input$HT.eccen)), eccen.units = rep(input$eccen.units, 2),
Temp = input$Temp, p = input$bPres, h = input$rHumi,
unitsENV = c(input$TempUnits, input$bPresUnits, input$rHumiUnits),
add.info = add.info()
))
class(DCC$indError[, 1])
class(DCC$indError[, 2])
class(DCC$indError[, 3])
class(DCC$indError[, 4])
t(HOT2R(input$HT.indicationError)[, -1])
data.frame(massSTD, indError, uncert)
rownames(data.frame(massSTD, indError, uncert))
rownames(t(HOT2R(input$HT.indicationError)[, -1]))
matrix(t(HOT2R(input$HT.indicationError)[, -1]), dimnames = NULL)
t(HOT2R(input$HT.indicationError)[, -1])
str(t(HOT2R(input$HT.indicationError)[, -1]))
str(data.frame(massSTD, indError, uncert))
(DCC <- calibCert(institution = input$institution, accreditation = input$accreditation, date = input$date,
balanceID = input$balanceID, serial = input$serial, certificate = input$certificate,
d = input$d, d.units = input$d.units,
#indError = data.frame(massSTD, indError, uncert),
indError = data.frame(t(HOT2R(input$HT.indicationError)[, -1])),
indError.units = HOT2R(input$HT.indicationError)[, 1],
expanded = TRUE, k = input$IndErrorK, traceability = input$traceability, classSTD = input$classSTD,
SummarizeRepInput(HOT2R(input$HT.repeatability)), rep.units = rep(input$rep.units, 2),
eccen = SummarizeEccenInput(HOT2R(input$HT.eccen)), eccen.units = rep(input$eccen.units, 2),
Temp = input$Temp, p = input$bPres, h = input$rHumi,
unitsENV = c(input$TempUnits, input$bPresUnits, input$rHumiUnits),
add.info = add.info()
))
NAWI.DCC.Completed
NAWI.DCC.Completed
NAWI.DCC.Completed()
runApp()
runApp()
runApp()
runApp()
DCC
DCC()
XX <- DCC()
XX$add.info
XX$add.info$Logo
runApp()
runApp()
DC <- readRDS("~/Downloads/DCC_NAWI___2022-05-20.rds")
DC
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
DC
class(DC)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
readRDS(input$DisFile$datapath)
input$DisFile
readRDS(input$NAWI.DCC_uploaded$datapath)
runApp()
dataFile
NAWIDCC
NAWIDCC()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
